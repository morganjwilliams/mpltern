.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_advanced_03.manual_tick_positions.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_advanced_03.manual_tick_positions.py:


=====================
Manual tick positions
=====================

Tick positions can be given manually in the same way as Matplotlib.

This feature may be useful e.g. when you do not want to show zero ticks to make
corner axis labels closer to the triangle.



.. image:: /gallery/advanced/images/sphx_glr_03.manual_tick_positions_001.svg
    :class: sphx-glr-single-img





.. code-block:: default

    import matplotlib.pyplot as plt
    from mpltern.ternary.datasets import get_spiral


    ax = plt.subplot(projection='ternary')

    ax.plot(*get_spiral())

    ax.grid()

    ax.set_tlabel('Top')
    ax.set_llabel('Left')
    ax.set_rlabel('Right')

    # Specify tick positions manually.
    ax.taxis.set_ticks([0.2, 0.4, 0.6, 0.8, 1.0])
    ax.laxis.set_ticks([0.2, 0.4, 0.6, 0.8, 1.0])
    ax.raxis.set_ticks([0.2, 0.4, 0.6, 0.8, 1.0])

    plt.show()


.. _sphx_glr_download_gallery_advanced_03.manual_tick_positions.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: 03.manual_tick_positions.py <03.manual_tick_positions.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: 03.manual_tick_positions.ipynb <03.manual_tick_positions.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
