.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_intermediate_ternary_limits.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_intermediate_ternary_limits.py:


==============
Ternary limits
==============

We can limit the ranges of ternary axes.



.. image:: /gallery/intermediate/images/sphx_glr_ternary_limits_001.svg
    :class: sphx-glr-single-img





.. code-block:: default

    import matplotlib.pyplot as plt
    from mpltern.ternary.datasets import get_spiral


    ax = plt.subplot(projection='ternary')

    ax.plot(*get_spiral())

    ax.set_tlabel('Top')
    ax.set_llabel('Left')
    ax.set_rlabel('Right')

    # Using ``ternary_lim``, you can limit the range of ternary axes.
    # Be sure about the consistency; the limit values must satisfy:
    # tmax + lmin + rmin = tmin + lmax + rmin = tmin + lmin + rmax = ternary_scale
    ax.set_ternary_lim(
        0.1, 0.5,  # tmin, tmax
        0.2, 0.6,  # lmin, lmax
        0.3, 0.7,  # rmin, rmax
    )

    # You can also use ``ternary_min`` and ``ternary_max`` as follows, where you do
    # not have to care the consistency above.
    # ax.set_ternary_min(0.1, 0.2, 0.3)
    # ax.set_ternary_max(0.5, 0.6, 0.7)

    plt.show()


.. _sphx_glr_download_gallery_intermediate_ternary_limits.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: ternary_limits.py <ternary_limits.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: ternary_limits.ipynb <ternary_limits.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
